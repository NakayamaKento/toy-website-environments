name: deploy

on:
    workflow_call:
        inputs:
            envuronmentType:
                required: true
                type: string
            resourceGroupName:
                required: true
                type: string
        secrets:
            Azure_CLIEND_ID:
                required: true
            AZURE_TENATN_ID:
                required: true
            AZURE_SUBSCRIPTION_ID:
                required: true

jobs:
    validate:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - uses: azure/login@v2
          name: Sign in to Azure
          with:
            client-id: ${{ secrets.Azure_CLIEND_ID}}
            tenant-id: ${{ secrets.AZURE_TENATN_ID}}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
        - if: inputs.envuronmentType != 'Production'
          uses: azure/arm-deploy@v2
          name: Run preflight validation
          with:
            deploymentName: ${{ github.run_number}}
            resourceGroupName: ${{ inputs.resourceGroupName}}
            template: ./deploy/main.bicep
            paramters: >
                environmentType=${{ inputs.envuronmentType}}
            deploymentMode: Validate
        - if: inputs.envuronmentType == 'Production'
          uses: azure/arm-deploy@v2
          name: Run what-if
          with:
            failOnStdErr: faile
            resourceGroupName: ${{ inputs.resourceGroupName}}
            template: ./deploy/main.bicep
            parameters: >
                environmentType=${{ inputs.envuronmentType}}
            additionalArguments: --what-if

    deploy:
        needs: validate
        environment: ${{ inputs.envuronmentType}}
        runs-on: ubuntu-latest
        outputs:
            appServiceAppHostName: ${{ steps.deploy.outputs.appServiceAppHostName}}
        steps:
        - uses: actions/checkout@v3
        - uses: azure/login@v2
          name: Sign in to Azure
          with:
            client-id: ${{ secrets.Azure_CLIEND_ID}}
            tenant-id: ${{ secrets.AZURE_TENATN_ID}}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
        - uses: azure/arm-deploy@v2
          id: deploy
          name: Deploy Bicep file
          with:
            failOnStdErr: false
            deploymentName: ${{ github.run_number}}
            resourceGroupName: ${{ inputs.resourceGroupName}}
            template: ./deploy/main.bicep
            parameters: >
                environmentType=${{ inputs.envuronmentType}}

    smoke-test:
        runs-on: ubuntu-latest
        needs: deploy
        steps:
        - uses: actions/checkout@v3
        - run: |
            $container = New-PesterContainer `
                -Path 'deploy/Website.Tests.ps1' `
                -Data @{ HostName = '${{ needs.deploy.outputs.appServiceAppHostName}}'}
            invoke-Pester `
                -Container $container `
                -CI
          name: Run smoke tests
          shell: pwsh